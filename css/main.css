html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}*,*:before,*:after{margin:0;padding:0;box-sizing:border-box}html,body{font-family:'Lato', sans-serif}img{display:block}p{letter-spacing:1px;line-height:1.7;opacity:.9;font-size:18px}b{font-weight:bolder;font-size:1.1em}body{background:#191b1e;color:#fff}canvas{position:absolute;top:0;left:0;z-index:0;opacity:.4;height:100%;width:100%}h1{border-radius:100%;overflow:hidden;margin:0}h2{font-family:'Roboto Slab', serif;font-size:30px;margin-top:50px;letter-spacing:2px;font-weight:400}@-webkit-keyframes writing{0%{-webkit-transform:scale(0.8);transform:scale(0.8);opacity:.5}50%{-webkit-transform:scale(1);transform:scale(1);opacity:.7}100%{-webkit-transform:scale(0.8);transform:scale(0.8);opacity:.5}}@keyframes writing{0%{-webkit-transform:scale(0.8);transform:scale(0.8);opacity:.5}50%{-webkit-transform:scale(1);transform:scale(1);opacity:.7}100%{-webkit-transform:scale(0.8);transform:scale(0.8);opacity:.5}}@-webkit-keyframes bounceIn{0%{-webkit-transform:translate(-50%, -50%) scale(0.7);transform:translate(-50%, -50%) scale(0.7);opacity:1}100%{-webkit-transform:translate(-50%, -50%) scale(1.5);transform:translate(-50%, -50%) scale(1.5);opacity:0}}@keyframes bounceIn{0%{-webkit-transform:translate(-50%, -50%) scale(0.7);transform:translate(-50%, -50%) scale(0.7);opacity:1}100%{-webkit-transform:translate(-50%, -50%) scale(1.5);transform:translate(-50%, -50%) scale(1.5);opacity:0}}.header{width:100%;z-index:99;height:80px;display:-webkit-flex;display:-ms-flexbox;display:flex;text-align:left;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid rgba(255,255,255,0.1);padding:0 20px}@media screen and (min-width: 769px){.header{padding:0 3%}}.header a{text-decoration:none;color:#fff;opacity:.7;transition:opacity .2s ease-out}.header a:hover{opacity:1}.header h2{margin:0;font-size:18px}.header svg{display:block;fill:#fff;width:20px;height:20px}.preloader{position:fixed;top:0;left:0;width:100%;height:100%;background:#2a2a2a;z-index:9999;opacity:1;transition:.5s ease-out}.preloader.is-loaded{opacity:0}.preloader.is-end{display:none}.footer{width:100%;background:#2a2a2a;padding:30px;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}@media screen and (min-width: 768px){.footer{-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;margin-top:-30px;position:relative;z-index:99}}.footer p,.footer a{font-size:11px;margin:0;color:#fff}.footer .license{display:block;margin-top:10px}@media screen and (min-width: 768px){.footer .license{margin-top:2px;text-align:right}}.footer .license,.footer .license a{opacity:.5}.wrapper{display:-webkit-flex;display:-ms-flexbox;display:flex;text-align:center;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}.section{width:100%;margin:0 auto;text-align:left;position:relative;text-align:center;z-index:10;padding:50px 5%}@media screen and (min-width: 769px){.section{padding:100px 15%}}.section p{margin-bottom:7%}.cont-canvas{position:relative}.box-circle{position:relative;display:inline-block}.box-circle.is-loaded:after{-webkit-transform:translate(-50%, -50%) scale(0.9);transform:translate(-50%, -50%) scale(0.9);-webkit-animation:bounceIn 2s infinite;animation:bounceIn 2s infinite}.box-circle.is-loaded:before{-webkit-transform:translate(-50%, -50%) scale(0.9);transform:translate(-50%, -50%) scale(0.9);-webkit-animation:bounceIn 2s infinite .3s;animation:bounceIn 2s infinite .3s}.box-circle h1{position:relative;z-index:1}.box-circle:before,.box-circle:after{content:"";display:block;width:100%;height:100%;position:absolute;border:1px solid #fff;border-radius:100%;z-index:0;top:50%;left:50%;-webkit-transform:translate(-50%, -50%) scale(0.7);transform:translate(-50%, -50%) scale(0.7)}.day-text{font-family:'Roboto Slab', serif;margin:50px 0;letter-spacing:1px;line-height:1.4;font-size:20px;font-weight:400;background:#fff;color:rgba(0,0,0,0.7);border-radius:8px;display:inline-block;position:relative;padding:20px 30px;text-align:left}.day-text:after{content:" ";right:100%;border:solid transparent;height:0;width:0;position:absolute;top:-30px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);pointer-events:none;border-bottom-color:#fff;border-width:15px}@media screen and (min-width: 769px){.day-text{font-size:2.5vw}}.telegram-me,.message-me{color:#fff;text-decoration:none;padding:10px 12px;font-size:15px;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;transition:background .1s ease-out}.telegram-me svg,.message-me svg{fill:#fff;display:block}.telegram-me i,.message-me i{display:inline-block;height:20px;width:20px;margin-right:10px}.telegram-me{background:#39b0e3}.telegram-me:hover{background:#1fa2da}.telegram-me i{width:16px;height:16px}.button-box{padding:10px;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;margin:0 auto;background:rgba(0,0,0,0.06);-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.button-box>a{width:145px}.bubbles-text{opacity:0;z-index:9;color:#030303;font-size:16px;margin-left:70px;position:relative;padding:8px 18px;border-radius:6px;display:inline-block;background:#fde1af;transition:all .3s ease-out}.bubbles-text.is-active{opacity:1}.popup{position:relative}.box-message{padding:100px 5% 130px 5%}.box-message>.popup{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.box-message>.popup+.popup{margin-top:3%}.box-message>.popup.is-first .bubbles-text{margin-left:30px}.box-message>.popup.is-first .bubbles-text:after{content:" ";right:100%;border:solid transparent;height:0;width:0;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);pointer-events:none;border-right-color:#fde1af;border-width:10px}.bubbles{color:#030303;padding:14px 18px;border-radius:6px;background:#fde1af;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;transition:all .3s ease-out;position:absolute;margin:0;left:70px;top:0;-webkit-transform:translateY(-50%);transform:translateY(-50%);opacity:0}.bubbles.is-active{opacity:.7;-webkit-transform:translateY(0%);transform:translateY(0%)}.bubbles.is-first{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.bubbles.is-first:after{content:" ";right:100%;border:solid transparent;height:0;width:0;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);pointer-events:none;border-right-color:#fde1af;border-width:10px}.bubbles i{opacity:.5;width:8px;height:8px;background:#000;border-radius:8px;display:inline-block;-webkit-animation:writing 1.1s infinite .5s;animation:writing 1.1s infinite .5s}.bubbles i+i{margin-left:5px;-webkit-animation:writing 1.1s infinite .7s;animation:writing 1.1s infinite .7s}.bubbles i+i+i{-webkit-animation:writing 1.1s infinite .9s;animation:writing 1.1s infinite .9s}.box-message-logo{border-radius:100%;overflow:hidden;display:inline-block;height:40px;width:40px}.box-map{width:100%;min-height:400px;position:relative;background:#f5f5f3;display:none}@media screen and (min-width: 768px){.box-map{display:-webkit-flex;display:-ms-flexbox;display:flex}}.box-map>div{width:50%;position:relative}.box-map>div iframe,.box-map>div #map{position:absolute;height:100%;width:100%;top:0;left:0}.message-me{background:#0084ff}.message-me:hover{background:#2495ff}.box-main-message{opacity:0;-webkit-transform:translateY(-10%);transform:translateY(-10%);transition:all 1.5s cubic-bezier(0.19, 1, 0.22, 1);will-change:transform;max-width:800px;margin:0 auto}.box-main-message.is-loaded{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}

/*# sourceMappingURL=data:application/json;base64, */
